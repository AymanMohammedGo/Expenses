{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenesForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","datePoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpnses","filter","toString","selectedYear","ExpensesForm","enteredTitle","setEnteredTitle","enteredAomunt","setEnteredAomunt","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancle","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f5c812e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const [title, setTitle] = useState(props.title);\r\n  const clickHander = () => {\r\n    setTitle(\"Update!!!\");\r\n    console.log(title);\r\n  };\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        {/* <button onClick={clickHander}>Change Title</button> */}\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expense found.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import react from \"react\";\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"Chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import react from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.datePoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.datePoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import react from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expense) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart datePoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpnses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expense={filteredExpnses} />\r\n      <ExpensesList items={filteredExpnses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenesForm.css\";\r\nconst ExpensesForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAomunt, setEnteredAomunt] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAomunt: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAomunt(event.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAomunt: event.target.value,\r\n    // });\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredAomunt: event.target.value };\r\n    // });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredDate: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const sumbmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAomunt,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAomunt(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={sumbmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAomunt}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"Date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancle}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpensesForm;\r\n","import { useState } from \"react\";\r\nimport ExpensesForm from \"./ExpenesForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpensesForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancle={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n  const addExpenseHandler = (expense) => {\r\n    //console.log(expense);\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n    //setExpenses([expense]);\r\n  };\r\n\r\n  // return React.createElement(\r\n  //   'div',\r\n  //   {},\r\n  //   React.createElement('h2', {}, \"Let's get started!\"),\r\n  //   React.createElement(Expenses, { items: expenses })\r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}